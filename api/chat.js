// api/chat.js - Version avec fallback conversationnel intelligent
const fetch = require('node-fetch');

module.exports = async (req, res) => {
    // 1. Configuration de base
    const GEMINI_API_KEY = process.env.GEMINI_API_KEY;
    const MODEL = 'gemini-1.5-flash';
    const PROMO_CODE = "JAX72";
    const WHATSAPP_LINK = "https://whatsapp.com/channel/0029VbBRgnhEawdxneZ5To1i";
    const TELEGRAM_LINK = "https://t.me/+tuopCS5aGEk3ZWZk";

    // 2. Gestion CORS
    res.setHeader('Access-Control-Allow-Credentials', true);
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'GET,OPTIONS,PATCH,DELETE,POST,PUT');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');
    
    if (req.method === 'OPTIONS') {
        return res.status(200).end();
    }

    if (req.method !== 'POST') {
        return res.status(405).json({ error: 'Method Not Allowed' });
    }

    // 3. Extraction de la requ√™te
    let userQuery;
    try {
        const body = typeof req.body === 'string' ? JSON.parse(req.body) : req.body;
        userQuery = body.userQuery;
        
        if (!userQuery || typeof userQuery !== 'string') {
            return res.status(400).json({ error: 'Requ√™te utilisateur invalide' });
        }
    } catch (error) {
        console.error("‚ùå Erreur de parsing:", error);
        return res.status(400).json({ error: 'Format de requ√™te invalide' });
    }

    // 4. SYST√àME DE FALLBACK INTELLIGENT
    const getFallbackResponse = (userMessage) => {
        const message = userMessage.toLowerCase().trim();
        
        // üî• R√©ponses bas√©es sur l'intention de l'utilisateur
        const responseMap = {
            // üéØ SALUTATIONS
            'salut': `Salut ! üëã Pr√™t √† maximiser tes gains avec le code **${PROMO_CODE}** ? Je suis l√† pour t'aider √† obtenir les meilleurs bonus !`,
            'bonjour': `Bonjour ! üöÄ Content de te revoir. N'oublie pas le code **${PROMO_CODE}** pour tes inscriptions, c'est la cl√© des bonus max !`,
            'hello': `Hello ! üí´ Comment vas-tu ? Si tu veux les meilleures offres, pense au code **${PROMO_CODE}** √† l'inscription !`,
            'coucou': `Coucou ! üòä Pr√™t pour une session de gains ? Le code **${PROMO_CODE}** t'attend pour des bonus incroyables !`,
            
            // ‚ùì QUESTIONS SUR LE CODE
            'code promo': `üéØ Le code **${PROMO_CODE}** est ton passeport vers les meilleurs bonus ! Utilise-le √† l'inscription sur 1xBet ou Melbet.`,
            'quel est le code': `üî• Le code magique c'est **${PROMO_CODE}** ! Ne l'oublie surtout pas √† l'inscription pour d√©bloquer tous les avantages.`,
            'code': `üí´ Je te recommande le code **${PROMO_CODE}** ! C'est le plus rentable en ce moment pour les nouveaux inscrits.`,
            
            // üé∞ QUESTIONS 1XBET
            '1xbet': `üé∞ Sur 1xBet, utilise **${PROMO_CODE}** pour un bonus de bienvenue boost√© ! N'oublie pas de faire ton premier d√©p√¥t.`,
            'comment s\'inscrire sur 1xbet': `üìù Va sur 1xBet.com, remplis le formulaire et surtout entre **${PROMO_CODE}** dans le champ code promo !`,
            'inscription 1xbet': `üöÄ Inscription rapide : 1xBet.com + code **${PROMO_CODE}** = Bonus maximum garanti !`,
            
            // üé≤ QUESTIONS MELBET
            'melbet': `üé≤ Sur MelBet, le code **${PROMO_CODE}** te donne acc√®s √† des offres exclusives ! Parfait pour bien commencer.`,
            'comment s\'inscrire sur melbet': `üì± Rendez-vous sur MelBet.com, inscris-toi et n'oublie pas **${PROMO_CODE}** comme code promo !`,
            
            // üí∞ QUESTIONS BONUS
            'bonus': `üí∞ Avec **${PROMO_CODE}**, tu peux obtenir jusqu'√† 100% de bonus sur ton premier d√©p√¥t ! C'est le moment de profiter.`,
            'gain': `üí∏ Les gains commencent avec le bon code ! **${PROMO_CODE}** est ta cl√© pour des bonus optimis√©s sur tes paris.`,
            'argent': `ü§ë Pour maximiser tes gains, commence par utiliser **${PROMO_CODE}** √† l'inscription. Ensuite, fais ton premier d√©p√¥t !`,
            
            // üì± QUESTIONS R√âSEAUX SOCIAUX
            'whatsapp': `üí¨ Rejoins notre WhatsApp ici : ${WHATSAPP_LINK} pour des pronostics gratuits chaque jour ! On y partage les meilleures opportunit√©s.`,
            'telegram': `üì¢ Notre Telegram : ${TELEGRAM_LINK} - Tu y trouveras des analyses exclusives et des conseils de paris en direct !`,
            'r√©seaux sociaux': `üì± Suis-nous sur WhatsApp ${WHATSAPP_LINK} et Telegram ${TELEGRAM_LINK} pour ne rien manquer des meilleurs pronos !`,
            
            // üèÜ PRONOSTICS
            'pronostic': `üéØ Nos meilleurs pronos sont sur WhatsApp et Telegram ! Rejoins-nous : ${WHATSAPP_LINK} - On analyse les matchs quotidiennement.`,
            'prediction': `üîÆ Pour des predictions fiables, suis nos cha√Ænes ! WhatsApp : ${WHATSAPP_LINK} | Telegram : ${TELEGRAM_LINK}`,
            'conseil': `üí° Mon meilleur conseil : utilise **${PROMO_CODE}** + rejoins nos r√©seaux pour des tips exclusifs !`,
            
            // üí≥ D√âP√îT
            'd√©p√¥t': `üí≥ Apr√®s inscription avec **${PROMO_CODE}**, fais ton premier d√©p√¥t (5000F ou 10$) pour activer tous les bonus !`,
            'premier d√©p√¥t': `üö® Important : le premier d√©p√¥t active tes bonus ! 5000F ou 10$ minimum apr√®s inscription avec **${PROMO_CODE}**.`,
            'combien d√©poser': `üí∞ Je recommande 5000F ou 10$ pour ton premier d√©p√¥t apr√®s avoir utilis√© **${PROMO_CODE}** √† l'inscription.`,
            
            // ‚ùì QUESTIONS G√âN√âRIQUES
            'comment √ßa marche': `üéØ C'est simple : 1) Inscris-toi avec **${PROMO_CODE}** 2) Fais ton 1er d√©p√¥t 3) Rejoins nos r√©seaux pour des pronos !`,
            'aide': `üÜò Je peux t'aider avec : codes promo, inscriptions, bonus et pronostics. Demande-moi ce dont tu as besoin !`,
            'quoi de neuf': `üî• En ce moment, le code **${PROMO_CODE}** offre des bonus exceptionnels ! C'est le bon moment pour s'inscrire.`
        };

        // üîç Recherche de correspondance par mot-cl√©
        for (const [keyword, response] of Object.entries(responseMap)) {
            if (message.includes(keyword)) {
                return response;
            }
        }

        // üé≤ R√©ponses g√©n√©rales al√©atoires si aucune correspondance
        const generalResponses = [
            `üéØ Excellent question ! Pour optimiser tes gains, n'oublie pas le code **${PROMO_CODE}** √† chaque inscription. C'est la base !`,
            `üí´ Je te conseille de toujours utiliser **${PROMO_CODE}** comme code promo. Ensuite, rejoins nos r√©seaux pour des conseils exclusifs !`,
            `üöÄ Pour bien d√©marrer, commence par t'inscrire avec **${PROMO_CODE}**. Ensuite, je te guide pour les √©tapes suivantes !`,
            `üî• Le secret c'est **${PROMO_CODE}** ! Ce code ouvre les portes des meilleurs bonus sur tes plateformes de paris pr√©f√©r√©es.`,
            `üí° Astuce du jour : **${PROMO_CODE}** reste le code le plus rentable. Utilise-le et fais ton premier d√©p√¥t pour activer les bonus !`,
            `üé∞ Que dirais-tu de maximiser tes gains avec **${PROMO_CODE}** ? C'est le code qu'il te faut pour des bonus boost√©s !`,
            `üìà Pour augmenter tes chances, combine **${PROMO_CODE}** √† l'inscription + nos pronostics sur WhatsApp : ${WHATSAPP_LINK}`,
            `üíé **${PROMO_CODE}** = Ton alli√© pour des bonus premium ! N'h√©site pas √† me demander comment l'utiliser au mieux.`,
            `üöÄ Pr√™t √† passer au niveau sup√©rieur ? **${PROMO_CODE}** est ta premi√®re √©tape vers des gains optimis√©s !`,
            `üéØ Je remarque que tu t'int√©resses au betting. Commence par le code **${PROMO_CODE}** - c'est le plus avantageux en ce moment !`
        ];

        return generalResponses[Math.floor(Math.random() * generalResponses.length)];
    };

    // 5. TENTATIVE API GEMINI (avec fallback automatique)
    let useFallback = false;
    
    if (GEMINI_API_KEY) {
        try {
            const API_URL = `https://generativelanguage.googleapis.com/v1beta/models/${MODEL}:generateContent?key=${GEMINI_API_KEY}`;

            const payload = {
                contents: [{
                    parts: [{
                        text: `Tu es JAX72PRONOSTIC, assistant betting. R√©ponds en 3 phrases max. Code: ${PROMO_CODE}. Liens: ${WHATSAPP_LINK}, ${TELEGRAM_LINK}. Sois concis et pro.\n\nQuestion: ${userQuery}`
                    }]
                }],
                generationConfig: {
                    temperature: 0.7,
                    maxOutputTokens: 150,
                }
            };

            console.log("üîÑ Tentative API Gemini...");
            
            const response = await fetch(API_URL, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });

            if (response.ok) {
                const data = await response.json();
                const aiText = data.candidates?.[0]?.content?.parts?.[0]?.text;
                
                if (aiText && aiText.length > 10) {
                    console.log("‚úÖ R√©ponse Gemini re√ßue");
                    res.setHeader('Content-Type', 'text/plain; charset=utf-8');
                    return res.status(200).send(aiText);
                }
            }
            
            // Si on arrive ici, l'API a √©chou√©
            useFallback = true;
            console.log("‚ö†Ô∏è API Gemini √©chou√©e, utilisation du fallback");
            
        } catch (error) {
            useFallback = true;
            console.log("‚ö†Ô∏è Erreur API, fallback activ√©:", error.message);
        }
    } else {
        useFallback = true;
        console.log("‚ö†Ô∏è Pas de cl√© API, fallback par d√©faut");
    }

    // 6. UTILISATION DU FALLBACK INTELLIGENT
    const fallbackResponse = getFallbackResponse(userQuery);
    console.log("üéØ Fallback utilis√©:", fallbackResponse.substring(0, 50) + "...");
    
    res.setHeader('Content-Type', 'text/plain; charset=utf-8');
    return res.status(200).send(fallbackResponse);
};